<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">


	<!-- 导入外部的properties配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />

	<!-- 配置c3p0数据源 -->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
		<property name="jdbcUrl" value="${jdbcUrl}"></property>
		<property name="driverClass" value="${driverClass}"></property>
		<property name="user" value="${user}"></property>
		<property name="password" value="${password}"></property>
		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
		<property name="initialPoolSize" value="${initialPoolSize}"></property>
		<!--连接池中保留的最小连接数。Default: 3 -->
		<property name="minPoolSize" value="3"></property>
		<!--连接池中保留的最大连接数。Default: 15 -->
		<property name="maxPoolSize" value="${maxPoolSize}"></property>
		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->
		<property name="acquireIncrement" value="3"></property>
		<!--最大空闲时间，1800秒内未使用则连接被丢弃，若为0则永不丢弃。Default: 0 -->
		<property name="maxIdleTime" value="1800"></property>
	</bean>

	<!-- 配置sessionFactory -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置hibernate信息 -->
		<property name="hibernateProperties">
			<props>
				<!-- 输出sql语句 -->
				<prop key="hibernate.show_sql">true</prop>
				<!-- 输出sql的格式化语句 -->
				<prop key="hibernate.format_sql">true</prop>
				<!-- hibernate自动创建数据库表 update:数据库有这个表级更新，无则创建 -->
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<!-- 配置数据库格式语言 分页 -> mysql：limit ; oracle:rownum 让hibernate识别不同数据库的语言 -->
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<!-- 绑定session -->
				<prop key="hibernate.current_session_context_class">thread</prop>
			</props>
		</property>
		<property name="mappingLocations">
			<list>
				<value>classpath:cn/hnck/com/entity/*.hbm.xml</value>
			</list>
		</property>
	</bean>

	<!-- 配置事务管理 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<tx:advice id="txAdvice" transaction-manager="txManager">
		<!-- 把事务封装好的一个 面板 -->
		<tx:attributes>
			<!-- 规定所有find、list、get开头的方法，对数据库只有只读功能 -->
			<tx:method name="get*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<!-- 抛出异常回滚事务 -->
			<tx:method name="*" rollback-for="Throwable" />
		</tx:attributes>
	</tx:advice>

	<!-- 切入事务开始 织入 -->
	<aop:config>
		<!-- service层下所有类方法 -->
		<aop:pointcut expression="execution(* cn.hnck.com.dao.impl.*.*(..))"
			id="pointcut" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pointcut" />
	</aop:config>

	<!-- 加载hibernate配置 <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean"> 
		<property name="configLocation" value="classpath:hibernate.cfg.xml"></property> 
		</bean> -->

	<!-- 配置hibernateTemplate -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory"></property>
	</bean>

	<!-- Addressdao -->
	<bean id="AddressDao" class="cn.hnck.com.dao.impl.AddressDaoImpl">
		<property name="hibernateTemplate" ref="hibernateTemplate"></property>
	</bean>

	<!-- AddressService -->
	<bean id="AddressService" class="cn.hnck.com.service.impl.AddressServiceImpl">
		<property name="addressDao" ref="AddressDao"></property>
	</bean>

	<!-- AddressAaction -->
	<bean id="ShippingAddressAction" class="cn.hnck.com.action.ShippingAddressAction">
		<property name="addressService" ref="AddressService"></property>
	</bean>

</beans>